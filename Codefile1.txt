#Question 2
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.metrics import mean_absolute_percentage_error
from sklearn.metrics import mean_squared_error
from statsmodels.tsa.ar_model import AutoReg as AR
import operator
import numpy as np 

series = pd.read_csv("C:\\Users\\ASUS\\Desktop\\daily_covid_cases.csv",parse_dates=['Date'],index_col=['Date'],sep=',')
train_size = 0.65 
X = series.values
train, test = X[:int(len(X)*train_size)], X[int(len(X)*train_size):]

wind = 5
model = AR(train, lags=wind)
model_fit = model.fit() 
cofficient = model_fit.params 
print()
print("Q2 a  coefficients are :",cofficient)

hist = train[len(train)-wind:]
hist = [hist[i] for i in range(len(hist))]
predictions = list() 
for val in range(len(test)):
    length = len(hist)
    lag = [hist[i] for i in range(length-wind,length)]
    y = cofficient[0] 
    for d in range(wind):
        y += cofficient[d+1] * lag[wind-d-1] 
    obs = test[val]
    predictions.append(y) 
    hist.append(obs) 

#Question2 b part 1
plt.scatter(test,predictions )
plt.xlabel('Actual cases')
plt.ylabel('Predicted cases')
plt.title('Q2 part b\n Part 1')
plt.show()

#question2 b part 2
x=[i for i in range(len(test))]
plt.plot(x,test, label='Actual cases')
plt.plot(x,predictions , label='Predicted cases')
plt.legend()
plt.title('Q2 part b\n Part 2')
plt.show()

#Question2 b part 3
RMSE=mean_squared_error(test, predictions,squared=False)
print("Q2 part b-1 persent RMSE :",RMSE*100/(sum(test)/len(test)),"%")
print()

value=mean_absolute_percentage_error(test, predictions)
print("Q2 part b-1 persent MAPE :",value)


